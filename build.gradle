apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'distribution'


sourceCompatibility = 1.8

project.ext {
    configPath = "$rootProject.projectDir/configuration/"
    dropwizardVersion = '1.2.0'
    jerseyVersion = '2.19'
}

mainClassName = "com.cobainc0.beam.BeamApplication"

repositories {
    mavenCentral()
}

dependencies {

    compile(
            "io.dropwizard:dropwizard-core:${dropwizardVersion}",
            "io.dropwizard:dropwizard-auth:${dropwizardVersion}",
            "io.dropwizard:dropwizard-jdbi:${dropwizardVersion}",
            "io.dropwizard:dropwizard-migrations:${dropwizardVersion}",
            "io.dropwizard:dropwizard-views-mustache:${dropwizardVersion}",
            "mysql:mysql-connector-java:5.1.36"

    )

    testCompile(
            "junit:junit:4.12",
            "io.dropwizard:dropwizard-testing:${dropwizardVersion}",
            "org.skyscreamer:jsonassert:1.5.0", //json assert
            "com.h2database:h2:1.4.190"//for db rel testing
    )

    testCompile(
            "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:${jerseyVersion}"
    )
            {
                //non io blocking test framework plus server)
//                exclude group: 'junit'
                exclude group: 'javax.servlet'
            }

}

// Acceptance Tests
sourceSets {
    acceptanceTest {
        java.srcDir file('src/acceptance-test/java')
        resources.srcDir file('src/acceptance-test/resources')
        compileClasspath += main.output + test.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

// Configure the jar task to build a fat jar
jar {
    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes("Main-Class": mainClassName)
    }
}

run {
    args 'server', './src/dist/app-config.yml'

}
